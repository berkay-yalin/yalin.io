---
import MetaHead from '../components/Head.astro';
import Navigation from "../components/Navigation.astro";

import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';
---

<script is:inline src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js"></script>
<script is:inline src="https://cdn.jsdelivr.net/npm/three@0.128.0/examples/js/loaders/GLTFLoader.js"></script>

<script is:inline>
    document.addEventListener('DOMContentLoaded', () => {
        const scene = new THREE.Scene();

        const rem = parseFloat(getComputedStyle(document.documentElement).fontSize);
        let canvasWidth = window.innerWidth;
        let canvasHeight = window.innerHeight - (8 * rem);

        const camera = new THREE.PerspectiveCamera(50, canvasWidth / canvasHeight, 0.1, 1000);
        camera.position.set(8, 8, 8);
        camera.lookAt(0, 0, 0);

        const renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });
        renderer.setSize(canvasWidth, canvasHeight);

        const directionalLight = new THREE.DirectionalLight(0xffffff, 0.8);
        directionalLight.position.set(5, 10, 0);
        scene.add(directionalLight);

        const light = new THREE.AmbientLight(0xffffff, 0.2);
        scene.add(light);

        document.body.appendChild(renderer.domElement);

        // https://sketchfab.com/3d-models/90s-computer-c5e4fed8e05e41719165148e4bcf6795
        const loader = new THREE.GLTFLoader();
        loader.load('/90s_computer.glb', function(gltf) {
            let model = gltf.scene;
            model.rotation.set(0.25, 0, 0);
            scene.add(gltf.scene);

            function animate() {
                requestAnimationFrame(animate);
                if (model) {
                    model.rotation.y += 0.002;
                }
                renderer.render(scene, camera);
            }
            animate();
        });

        window.addEventListener('resize', () => {
            canvasWidth = window.innerWidth;
            canvasHeight = window.innerHeight - (8 * rem);
            camera.aspect = canvasWidth / canvasHeight;
            camera.updateProjectionMatrix();
            renderer.setSize(canvasWidth, canvasHeight);
        });
    });
</script>

<!doctype html>
<html lang="en">
	<head>
		<MetaHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
	</head>

	<body>
        <Navigation/>
	</body>
</html>

<style lang="scss">
    @use "../styles/global";
    @use "../styles/landing";

    body {
        overflow: hidden;
    }
</style>
